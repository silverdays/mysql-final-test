select date_format(now(),'%Y-%m-%d');

select jiayufei，17061112;

CREATE TABLE deptno(
id INT PRIMARY KEY AUTO_INCREMENT,
stuname VARCHAR(20) NOT NULL
)

CREATE TABLE empno(
id INT PRIMARY KEY AUTO_INCREMENT,
couname VARCHAR(20) NOT NULL
) 

INSERT INTO deptno VALUES(10, 'ACCOUNTING', 'NEW YORK');
INSERT INTO deptno VALUES(20, 'RESEARCH', 'DALLAS');
INSERT INTO deptno VALUES(30, 'SALES', 'CHICAGO');
INSERT INTO deptno VALUES(40, 'OPERATIONS', 'BOSTON');

INSERT INTO empno VALUES(7369, 'SMITH', 'CLERK', 7902, '1981-03-12', 800.00, NULL, 20);
INSERT INTO empno VALUES(7499, "ALLEN", "SALESMAN", 7698, "1982-03-12", 1600, 300, 30);
INSERT INTO empno VALUES(7521, "WARD", "SALESMAN", 7698, "1838-03-12", 1250, 500, 30);
INSERT INTO empno VALUES(7566, "JONES", "MANAGER", 7839, "1981-03-12", 2975, NULL, 20);
INSERT INTO empno VALUES(7654, "MARTIN", "SALESMAN", 7698, "1981-01-12", 1250, 1400, 30);
INSERT INTO empno VALUES(7698, "BLAKE", "MANAGER", 7839, "1985-03-12", 2450, NULL, 10);
INSERT INTO empno VALUES(7788, "SCOTT", "ANALYST", 7566, "1981-03-12", 3000, NULL, 20);
INSERT INTO empno VALUES(7839, "KING", "PRESIDENT", NULL, "1981-03-12", 5000, NULL, 10);
INSERT INTO empno VALUES(7844, "TURNER", "SALESMAN", 7689, "1981-03-12", 1500, 0, 30);
INSERT INTO empno VALUES(7878, "ADAMS", "CLERK", 7788, "1981-03-12", 1100, NULL,20);
INSERT INTO empno VALUES(7900, "JAMES", "CLERK", 7698,"1981-03-12",  950, NULL, 30);
INSERT INTO empno VALUES(7902, "FORD", "ANALYST", 7566, "1981-03-12", 3000, NULL, 20);
INSERT INTO empno VALUES(7934, "MILLER", "CLERK", 7782, "1981-03-12", 1300, NULL, 10);
INSERT INTO empno VALUES(17061112, "Jiayufei", "STUDENT", 7782, "1999-02-24", NULL, NULL, 10);

alter table deptno
  add constraint deptno primary key (deptno)
alter table deptno
  add constraint empno primary key (empno)

SELECT*from empno WHERE hire_ = (SELECT MAX(hire_date) FROM empno);

8种，并运算

select empno,ename,(ename, sal + comm)from empno




5.第一范式（1NF）： 数据库表中的字段都是单一属性的，不可再分。这个单一属性由基本类型构成，包括整型、实数、字符型、逻辑型、日期型等。
表一和表二符合第一范式。
第二范式（2NF）：数据库表中不存在非关键字段对任一候选关键字段的部分函数依赖。
这个数据库表不满足第二范式，因为存在如下决定关系：
(姓名) → (地区)，(学号) → (姓名, 出生年龄，职位)等 
即存在组合关键字中的字段决定非关键字的情况。所以不符合第二范式
6.

7.外模式
外模式又称子模式，对应于用户级。它是某个或某几个用户所看到的数据库的数据视图，是与某一应用有关的数据的逻辑表示。外模式是从模式导出的一个子集，包含模式中允许特定用户使用的那部分数据。用户可以通过外模式描述语言来描述、定义对应于用户的数据记录(外模式)，也可以利用数据操纵语言(Data Manipulation Lang uage，DML)对这些数据记录进行。外模式反映了数据库的用户观。
  内模式
内模式又称存储模式，对应于物理级，它是数据库中全体数据的内部表示或底层描述，是数据库最低一级的逻辑描述，它描述了数据在存储介质上的存储方式翱物理结构，对应着实际存储在外存储介质上的数据库。内模式由内模式描述语言来描述、定义，它是数据库的存储观。 
  作用是为了有效地组织、管理数据，提高数据库的逻辑独立性和物理独立性。

8.ACID是衡量事务的四个特性：
    原子性（Atomicity，或称不可分割性）
    一致性（Consistency）
    隔离性（Isolation）
    持久性（Durability）
8-1.
8-2.select @@tx_isolation;
8-3.设置隔离级别为READ UNCOMMITED(未提交读)；即允许在有事务未提交的情况读取数据；但因为修改事务还没有提交，所以只能读取旧的数据，即脏数据；
9.(1)图片，文件，二进制数据
(2)短生命期数据
(3)日志文件
